{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAoBA,SAASC,EAAcC,EAAUC,GACf,IAAIC,SAAQ,SAACC,EAASC,GACpC,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EAEFF,EAAQ,CAAEM,SAAAT,EAAUU,MAAAT,IAGjBG,EAAO,CAAEK,SAAAT,EAAUU,MAAAT,G,GACvBA,E,IAGFU,MAAK,SAAAC,G,IAAGH,EAAQG,EAARH,SAAUC,EAAKE,EAALF,MACjBb,EAAAgB,OAAOC,QAAQ,uBAAwCC,OAAfN,EAAS,QAAYM,OAANL,EAAM,M,IAE9DM,OAAM,SAAAJ,G,IAAGH,EAAQG,EAARH,SAAUC,EAAKE,EAALF,MAClBb,EAAAgB,OAAOI,QAAQ,sBAAqCF,OAAfN,EAAS,QAAYM,OAANL,EAAM,M,KApCnD,CACXQ,KAAMC,SAASC,cAAc,WAG1BF,KAAKG,iBAAiB,UAE3B,SAA6BC,GAC3BA,EAAIC,iBAKJ,IAJA,IAAIC,EAAaC,OAAOH,EAAII,cAAchB,MAAMiB,OAC1CC,EAAYH,OAAOH,EAAII,cAAcG,KAAKF,OAC1CG,EAAcL,OAAOH,EAAII,cAAcK,OAAOJ,OAE3CK,EAAI,EAAGA,GAAKF,EAAaE,GAAK,EACrCjC,EAAciC,EAAGR,GACjBA,GAAcI,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('.form'),\n};\n\nrefs.form.addEventListener('submit', onFormCreatePromise);\n\nfunction onFormCreatePromise(evt) {\n  evt.preventDefault();\n  let delayInput = Number(evt.currentTarget.delay.value);\n  const stepInput = Number(evt.currentTarget.step.value);\n  const amountInput = Number(evt.currentTarget.amount.value);\n\n  for (let i = 1; i <= amountInput; i += 1) {\n    createPromise(i, delayInput);\n    delayInput += stepInput;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      }\n      // Reject\n      else reject({ position, delay });\n    }, delay);\n  });\n  promise\n    .then(({ position, delay }) => {\n      Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position1","delay1","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","position","delay","then","param","Notify","success","concat","catch","failure","form","document","querySelector","addEventListener","evt","preventDefault","delayInput","Number","currentTarget","value","stepInput","step","amountInput","amount","i"],"version":3,"file":"03-promises.fb7feb66.js.map"}